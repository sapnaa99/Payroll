@model Model.EmployeeModel
@{
    ViewBag.Title = "CreateEmployee";
}

<div class="portlet box blue">
    <div class="portlet-title">
        <div class="caption">
            <h2>Create Employee</h2>
            <hr />
        </div>
    </div>
    <div class="portlet-body form ">
        <form id="employeeForm">
            <div class="form-body">
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            <label class="control-label" for="FName">First Name</label><br />
                            @Html.TextBoxFor(x => x.FName, new { @Class = "form-control" })
                            @Html.ValidationMessageFor(x => x.FName, null, new { @class = "label label-danger" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label class="control-label" for="MName">Middle Name</label><br />
                            @Html.TextBoxFor(x => x.MName, new { @Class = "form-control" })
                        </div>
                    </div>

                    <div class="col-md-4">
                        <div class="form-group">
                            <label class="control-label" for="LName">Last Name</label><br />
                            @Html.TextBoxFor(x => x.LName, new { @Class = "form-control" })
                            @Html.ValidationMessageFor(x => x.LName, null, new { @class = "label label-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-body">
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            <label class="control-label" for="Password">Password</label><br />
                            @Html.PasswordFor(x => x.Password, new { @Class = "form-control" })
                            @Html.ValidationMessageFor(x => x.Password, null, new { @class = "label label-danger" })
                        </div>
                    </div>

                    <div class="col-md-4">
                        <div class="form-group">
                            <label class="control-label" for="PasswordConfirmation">Password Confirmation</label><br />
                            @Html.PasswordFor(x => x.PasswordConfirmation, new { @Class = "form-control" })
                            @Html.ValidationMessageFor(x => x.PasswordConfirmation, null, new { @class = "label label-danger" })
                        </div>
                    </div>

                    <div class="col-md-4">
                        <div class="form-group">
                            <label class="control-label" for="Email">Email</label><br />
                            @Html.TextBoxFor(x => x.Email, new { @Class = "form-control" })
                            @Html.ValidationMessageFor(x => x.Email, null, new { @class = "label label-danger" })
                        </div>
                    </div>


                </div>
                <div class="row">


                    <div class="col-md-4">
                        <div class="form-group">
                            <label class="control-label" for="CompanyId">Company</label><br />
                            @Html.TextBoxFor(x => x.CompanyId, new { @Class = "k-dropdown" })
                            @Html.ValidationMessageFor(x => x.CompanyId, null, new { @class = "label label-danger" })
                        </div>
                    </div>


                </div>
            </div>
            <hr />
            <h4>Employee Information</h4>
            <hr />
            <div class="form-body">
                <div class="row">
                    <div class="col-md-3">
                        <div class="form-group">
                            <label class="control-label" for="ContactNumber">Contact Number</label><br />
                            @Html.TextBoxFor(x => x.EmployeeInformation.ContactNumber, new { @id = "ContactNumber", @Class = "form-control" })
                            @Html.ValidationMessageFor(x => x.EmployeeInformation.ContactNumber, null, new { @class = "label label-danger" })
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label class="control-label" for="MobileNumber">Mobile Number</label><br />
                            @Html.TextBoxFor(x => x.EmployeeInformation.MobileNumber, new { @id = "MobileNumber", @Class = "form-control" })
                            @Html.ValidationMessageFor(x => x.EmployeeInformation.MobileNumber, null, new { @class = "label label-danger" })
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label class="control-label" for="PersonalEmail">Personal Email</label><br />
                            @Html.TextBoxFor(x => x.EmployeeInformation.PersonalEmail, new { @id = "PersonalEmail", @Class = "form-control" })
                            @Html.ValidationMessageFor(x => x.EmployeeInformation.PersonalEmail, null, new { @class = "label label-danger" })
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label class="control-label" for="GenderListItemId">Gender</label><br />
                            @Html.TextBoxFor(x => x.EmployeeInformation.GenderListItemId, new { @id = "GenderListItemId", @class = "k-dropdown" })
                            @Html.ValidationMessageFor(x => x.EmployeeInformation.GenderListItemId, null, new { @class = "label label-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="form-body">
                <div class="row">
                    <div class="col-md-3">
                        <div class="form-group">
                            <label class="control-label" for="Address1">Address 1</label><br />
                            @Html.TextBoxFor(x => x.EmployeeInformation.Address1, new { @id = "Address1", @Class = "form-control" })
                            @Html.ValidationMessageFor(x => x.EmployeeInformation.Address1, null, new { @class = "label label-danger" })
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label class="control-label" for="Address2">Address2</label><br />
                            @Html.TextBoxFor(x => x.EmployeeInformation.Address2, new { @id = "Address2", @Class = "form-control" })
                            @Html.ValidationMessageFor(x => x.EmployeeInformation.Address2, null, new { @class = "label label-danger" })
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label class="control-label" for="City">City</label><br />
                            @Html.TextBoxFor(x => x.EmployeeInformation.City, new { @id = "City", @Class = "form-control" })
                            @Html.ValidationMessageFor(x => x.EmployeeInformation.City, null, new { @class = "label label-danger" })
                        </div>
                    </div>

                    <div class="col-md-3" for="State">
                        <div class="form-group">
                            <label class="control-label">State</label><br />
                            @Html.TextBoxFor(x => x.EmployeeInformation.State, new { @id = "State", @Class = "form-control" })
                            @Html.ValidationMessageFor(x => x.EmployeeInformation.State, null, new { @class = "label label-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="form-body">
                <div class="row">
                    <div class="col-md-3">
                        <div class="form-group">
                            <label class="control-label" for="Country">Country</label><br />
                            @Html.TextBoxFor(x => x.EmployeeInformation.Country, new { @id = "Country", @Class = "form-control" })
                            @Html.ValidationMessageFor(x => x.EmployeeInformation.Country, null, new { @class = "label label-danger" })
                        </div>
                    </div>

                </div>
            </div>
            <hr />
            <h4>Employee Salary</h4>
            <hr />
            <div class="form-body">
                <div class="row">
                    <div class="col-md-3">
                        <div class="form-group">
                            <label class="control-label" for="BasicSalary">Basic Salary</label><br />
                            @Html.TextBoxFor(x => x.EmployeeSalary.BasicSalary, new { @id = "BasicSalary", @Class = "form-control" })
                            @Html.ValidationMessageFor(x => x.EmployeeSalary.BasicSalary, null, new { @class = "label label-danger" })
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label class="control-label" for="Allowance">Allowance</label><br />
                            @Html.TextBoxFor(x => x.EmployeeSalary.Allowance, new { @id = "Allowance", @Class = "form-control" })
                            @Html.ValidationMessageFor(x => x.EmployeeSalary.Allowance, null, new { @class = "label label-danger" })
                        </div>
                    </div>

                </div>
            </div>
            <div class="form-actions right">
                <button type="submit" class="btn btn-primary" id="btnSubmit">
                    <span class="glyphicon glyphicon-plus"></span> Add Employee
                </button>
            </div>
        </form>
    </div>
</div>

<script>
    $(function () {
        UtilityListItemCategoryDropDown('GenderListItemId', 'Gender')
        $("#CompanyId").kendoDropDownList({
            filter: "startswith",
            optionLabel: "Select..",
            dataTextField: "CompanyName",
            dataValueField: "CompanyId",

            dataSource: {
                transport: {
                    read: {
                        type: 'Get',
                        url: WebApiUri + '/UtilityApi/CompanySel',
                        data: { UserId: @CurrentUser.UserId},
                        dataType: 'JSON',
                        contentType: "application/json; charset=utf-8"
                    }
                }
            }
        }).data("kendoDropDownList");

    });


    $("#employeeForm").on("submit",
        function(e) {
            debugger
            e.preventDefault();
            $(this).removeData("validator").removeData("unobtrusiveValidation"); //remove the form validation
            $.validator.unobtrusive.parse($(this)); //add the form validation

            if ($(this).valid()) {
                debugger

                var EmployeeSalaryModel = {
                    BasicSalary: $('#BasicSalary').val(),
                    Allowance: $('#Allowance').val()

                }

                var EmployeeInformationModel = {
                    ContactNumber: $('#ContactNumber').val(),
                    MobileNumber: $('#MobileNumber').val(),
                    PersonalEmail: $('#PersonalEmail').val(),
                    GenderListItemId: $('#GenderListItemId').val(),
                    Address1: $('#Address1').val(),
                    Address2: $('#Address2').val(),
                    City: $('#City').val(),
                    State: $('#State').val(),
                    Country: $('#Country').val(),
                    InsertUserId : @CurrentUser.UserId
                }
                var model = {
                    FName: $('#FName').val(),
                    MName: $('#MName').val(),
                    LName: $('#LName').val(),
                    Password: $('#Password').val(),
                    CompanyId: $('#CompanyId').val(),
                    Email: $("#Email").val(),
                    EmployeeSalary: EmployeeSalaryModel,
                    EmployeeInformation: EmployeeInformationModel
                  
                }

                $.ajax({
                    type: 'Post',
                    url: WebApiUri + '/EmployeeApi/EmployeeIns',
                    data: JSON.stringify(model),
                    dataType: 'JSON',
                    contentType: "application/json; charset=utf-8",
                    success: function(response) {
                        debugger
                        if (response.ReturnMessage == 'Password does not match') {
                            toastr.warning(response.ReturnMessage, 'Warning')
                        } else {
                            toastr.success(response.ReturnMessage, 'Success')
                        }
                        //$("#grid").data("kendoGrid").dataSource.read();
                        //$("#addSalaryRatDiv").hide()
                        //$("#btnSalaryRateAdd").show();
                    },
                    error: function(response) {
                    }
                });
            }
        });
</script>